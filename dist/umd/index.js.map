{"version":3,"file":"index.js","sources":["../../src/MockStorage.ts","../../src/SimplePromiseQueue.ts","../../src/utils.ts","../../src/index.ts"],"sourcesContent":["/**\r\n * Created by championswimmer on 22/07/17.\r\n */\r\nlet MockStorage: typeof Storage | undefined\r\n\r\n// @ts-ignore\r\nif (process.env.MODULE_FORMAT !== 'umd') {\r\n  MockStorage = class implements Storage {\r\n    [index: number]: string;\r\n    [key: string]: any;\r\n\r\n    public get length(): number {\r\n      return Object.keys(this).length\r\n    }\r\n\r\n    public key(index: number): string | any {\r\n      return Object.keys(this)[index]\r\n    }\r\n\r\n    public setItem(key: string, data: any): void {\r\n      this[key] = data.toString()\r\n    }\r\n    public getItem(key: string): string {\r\n      return this[key]\r\n    }\r\n    public removeItem(key: string): void {\r\n      delete this[key]\r\n    }\r\n    public clear(): void {\r\n      for (let key of Object.keys(this)) {\r\n        delete this[key]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport { MockStorage }\r\n","// tslint:disable: variable-name\r\nexport default class SimplePromiseQueue {\r\n  private readonly _queue: Array<Promise<void>> = []\r\n  private _flushing = false\r\n\r\n  public enqueue(promise: Promise<void>) {\r\n    this._queue.push(promise)\r\n    if (!this._flushing) { return this.flushQueue() }\r\n    return Promise.resolve()\r\n  }\r\n\r\n  private flushQueue() {\r\n    this._flushing = true\r\n\r\n    const chain = (): Promise<void> | void => {\r\n      const nextTask = this._queue.shift()\r\n      if (nextTask) {\r\n        return nextTask.then(chain)\r\n      } else {\r\n        this._flushing = false\r\n      }\r\n    }\r\n    return Promise.resolve(chain())\r\n  }\r\n}\r\n","import deepmerge from 'deepmerge'\r\n\r\nexport type MergeOptionType = 'replaceArrays' | 'concatArrays'\r\n\r\nconst options: {[k in MergeOptionType]: deepmerge.Options} = {\r\n  replaceArrays: {\r\n    arrayMerge: (destinationArray, sourceArray, options) => sourceArray\r\n  },\r\n  concatArrays: {\r\n    arrayMerge: (target, source, options) => target.concat(...source)\r\n  }\r\n}\r\n\r\nconst defaultMergeOptions: deepmerge.Options = {\r\n  // replacing arrays\r\n  \r\n}\r\n\r\nexport function merge<I, F>(into: Partial<I>, from: Partial<F>, mergeOption: MergeOptionType): I & F & {} {\r\n  return deepmerge(into, from, options[mergeOption])\r\n}\r\n","/**\r\n * Created by championswimmer on 18/07/17.\r\n */\r\nimport { Mutation, MutationPayload, Plugin, Store } from 'vuex'\r\nimport { AsyncStorage } from './AsyncStorage'\r\nimport { MockStorage } from './MockStorage'\r\nimport { PersistOptions } from './PersistOptions'\r\nimport SimplePromiseQueue from './SimplePromiseQueue'\r\nimport { merge, MergeOptionType } from './utils'\r\n\r\nlet FlattedJSON = JSON\r\n\r\n/**\r\n * A class that implements the vuex persistence.\r\n * @type S type of the 'state' inside the store (default: any)\r\n */\r\nexport class VuexPersistence<S> implements PersistOptions<S> {\r\n  public asyncStorage: boolean\r\n  public storage: Storage | AsyncStorage | undefined\r\n  public restoreState: (key: string, storage?: AsyncStorage | Storage) => Promise<S> | S\r\n  public saveState: (key: string, state: {}, storage?: AsyncStorage | Storage) => Promise<void> | void\r\n  public reducer: (state: S) => Partial<S>\r\n  public key: string\r\n  public filter: (mutation: MutationPayload) => boolean\r\n  public modules: string[]\r\n  public strictMode: boolean\r\n  public supportCircular: boolean\r\n  public mergeOption: MergeOptionType\r\n\r\n  /**\r\n   * The plugin function that can be used inside a vuex store.\r\n   */\r\n  public plugin: Plugin<S>\r\n  /**\r\n   * A mutation that can be used to restore state\r\n   * Helpful if we are running in strict mode\r\n   */\r\n  public RESTORE_MUTATION: Mutation<S>\r\n  public subscribed: boolean\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _mutex = new SimplePromiseQueue()\r\n\r\n  /**\r\n   * Create a {@link VuexPersistence} object.\r\n   * Use the <code>plugin</code> function of this class as a\r\n   * Vuex plugin.\r\n   * @param {PersistOptions} options\r\n   */\r\n  public constructor(options?: PersistOptions<S>) {\r\n    if (typeof options === 'undefined') options = {} as PersistOptions<S>\r\n    this.key = ((options.key != null) ? options.key : 'vuex')\r\n\r\n    this.subscribed = false\r\n    this.supportCircular = options.supportCircular || false\r\n    if (this.supportCircular) {\r\n      FlattedJSON = require('flatted')\r\n    }\r\n    this.mergeOption = options.mergeOption || 'replaceArrays'\r\n\r\n    let localStorageLitmus = true\r\n\r\n    try {\r\n      window.localStorage.getItem('')\r\n    } catch (err) {\r\n      localStorageLitmus = false\r\n    }\r\n\r\n    /**\r\n     * 1. First, prefer storage sent in optinos\r\n     * 2. Otherwise, use window.localStorage if available\r\n     * 3. Finally, try to use MockStorage\r\n     * 4. None of above? Well we gotta fail.\r\n     */\r\n    if (options.storage) { this.storage = options.storage }\r\n    else if (localStorageLitmus) { this.storage = window.localStorage }\r\n    else if (MockStorage) { this.storage = new MockStorage() }\r\n    else { throw new Error(\"Neither 'window' is defined, nor 'MockStorage' is available\") }\r\n\r\n    /**\r\n     * How this works is -\r\n     *  1. If there is options.reducer function, we use that, if not;\r\n     *  2. We check options.modules;\r\n     *    1. If there is no options.modules array, we use entire state in reducer\r\n     *    2. Otherwise, we create a reducer that merges all those state modules that are\r\n     *        defined in the options.modules[] array\r\n     * @type {((state: S) => {}) | ((state: S) => S) | ((state: any) => {})}\r\n     */\r\n    this.reducer = (\r\n      (options.reducer != null)\r\n        ? options.reducer\r\n        : (\r\n          (options.modules == null)\r\n            ? ((state: S) => state)\r\n            : (\r\n              (state: any) =>\r\n                (options!.modules as string[]).reduce((a, i) =>\r\n                  merge(a, { [i]: state[i] }, this.mergeOption), {/* start empty accumulator*/ })\r\n            )\r\n        )\r\n    )\r\n\r\n    this.filter = options.filter || ((mutation) => true)\r\n\r\n    this.strictMode = options.strictMode || false\r\n\r\n    const _this = this\r\n    this.RESTORE_MUTATION = function RESTORE_MUTATION(state: S, savedState: any) {\r\n      const mergedState = merge(state, savedState || {}, _this.mergeOption)\r\n      for (const propertyName of Object.keys(mergedState as {})) {\r\n        // Maintain support for vue 2\r\n        if ((this as any)._vm !== undefined && (this as any)._vm.$set !== undefined) {\r\n          (this as any)._vm.$set(state, propertyName, (mergedState as any)[propertyName])\r\n          continue\r\n        }\r\n\r\n        (state as any)[propertyName] = (mergedState as any)[propertyName]\r\n      }\r\n    }\r\n\r\n    this.asyncStorage = options.asyncStorage || false\r\n\r\n    if (this.asyncStorage) {\r\n\r\n      /**\r\n       * Async {@link #VuexPersistence.restoreState} implementation\r\n       * @type {((key: string, storage?: Storage) =>\r\n       *      (Promise<S> | S)) | ((key: string, storage: AsyncStorage) => Promise<any>)}\r\n       */\r\n      this.restoreState = (\r\n        (options.restoreState != null)\r\n          ? options.restoreState\r\n          : ((key: string, storage: AsyncStorage) =>\r\n            (storage).getItem(key)\r\n              .then((value) =>\r\n                typeof value === 'string' // If string, parse, or else, just return\r\n                  ? (\r\n                    this.supportCircular\r\n                      ? FlattedJSON.parse(value || '{}')\r\n                      : JSON.parse(value || '{}')\r\n                  )\r\n                  : (value || {})\r\n              )\r\n          )\r\n      )\r\n\r\n      /**\r\n       * Async {@link #VuexPersistence.saveState} implementation\r\n       * @type {((key: string, state: {}, storage?: Storage) =>\r\n       *    (Promise<void> | void)) | ((key: string, state: {}, storage?: Storage) => Promise<void>)}\r\n       */\r\n      this.saveState = (\r\n        (options.saveState != null)\r\n          ? options.saveState\r\n          : ((key: string, state: {}, storage: AsyncStorage) =>\r\n            (storage).setItem(\r\n              key, // Second argument is state _object_ if asyc storage, stringified otherwise\r\n              // do not stringify the state if the storage type is async\r\n              (this.asyncStorage\r\n                ? merge({}, state || {}, this.mergeOption)\r\n                : (\r\n                  this.supportCircular\r\n                    ? FlattedJSON.stringify(state) as any\r\n                    : JSON.stringify(state) as any\r\n                )\r\n              )\r\n            )\r\n          )\r\n      )\r\n\r\n      /**\r\n       * Async version of plugin\r\n       * @param {Store<S>} store\r\n       */\r\n      this.plugin = (store: Store<S>) => {\r\n        /**\r\n         * For async stores, we're capturing the Promise returned\r\n         * by the `restoreState()` function in a `restored` property\r\n         * on the store itself. This would allow app developers to\r\n         * determine when and if the store's state has indeed been\r\n         * refreshed. This approach was suggested by GitHub user @hotdogee.\r\n         * See https://github.com/championswimmer/vuex-persist/pull/118#issuecomment-500914963\r\n         * @since 2.1.0\r\n         */\r\n        (store as any).restored = ((this.restoreState(this.key, this.storage)) as Promise<S>).then((savedState) => {\r\n          /**\r\n           * If in strict mode, do only via mutation\r\n           */\r\n          if (this.strictMode) {\r\n            store.commit('RESTORE_MUTATION', savedState)\r\n          } else {\r\n            store.replaceState(merge(store.state, savedState || {}, this.mergeOption) as S)\r\n          }\r\n          this.subscriber(store)((mutation: MutationPayload, state: S) => {\r\n            if (this.filter(mutation)) {\r\n              this._mutex.enqueue(\r\n                this.saveState(this.key, this.reducer(state), this.storage) as Promise<void>\r\n              )\r\n            }\r\n          })\r\n          this.subscribed = true\r\n        })\r\n      }\r\n    } else {\r\n\r\n      /**\r\n       * Sync {@link #VuexPersistence.restoreState} implementation\r\n       * @type {((key: string, storage?: Storage) =>\r\n       *    (Promise<S> | S)) | ((key: string, storage: Storage) => (any | string | {}))}\r\n       */\r\n      this.restoreState = (\r\n        (options.restoreState != null)\r\n          ? options.restoreState\r\n          : ((key: string, storage: Storage) => {\r\n            const value = (storage).getItem(key)\r\n            if (typeof value === 'string') {// If string, parse, or else, just return\r\n              return (\r\n                this.supportCircular\r\n                  ? FlattedJSON.parse(value || '{}')\r\n                  : JSON.parse(value || '{}')\r\n              )\r\n            } else {\r\n              return (value || {})\r\n            }\r\n          })\r\n      )\r\n\r\n      /**\r\n       * Sync {@link #VuexPersistence.saveState} implementation\r\n       * @type {((key: string, state: {}, storage?: Storage) =>\r\n       *     (Promise<void> | void)) | ((key: string, state: {}, storage?: Storage) => Promise<void>)}\r\n       */\r\n      this.saveState = (\r\n        (options.saveState != null)\r\n          ? options.saveState\r\n          : ((key: string, state: {}, storage: Storage) =>\r\n            (storage).setItem(\r\n              key, // Second argument is state _object_ if localforage, stringified otherwise\r\n              (\r\n                this.supportCircular\r\n                  ? FlattedJSON.stringify(state) as any\r\n                  : JSON.stringify(state) as any\r\n              )\r\n            )\r\n          )\r\n      )\r\n\r\n      /**\r\n       * Sync version of plugin\r\n       * @param {Store<S>} store\r\n       */\r\n      this.plugin = (store: Store<S>) => {\r\n        const savedState = this.restoreState(this.key, this.storage) as S\r\n\r\n        if (this.strictMode) {\r\n          store.commit('RESTORE_MUTATION', savedState)\r\n        } else {\r\n          store.replaceState(merge(store.state, savedState || {}, this.mergeOption) as S)\r\n        }\r\n\r\n        this.subscriber(store)((mutation: MutationPayload, state: S) => {\r\n          if (this.filter(mutation)) {\r\n            this.saveState(this.key, this.reducer(state), this.storage)\r\n          }\r\n        })\r\n\r\n        this.subscribed = true\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a subscriber on the store. automatically is used\r\n   * when this is used a vuex plugin. Not for manual usage.\r\n   * @param store\r\n   */\r\n  private subscriber = (store: Store<S>) =>\r\n    (handler: (mutation: MutationPayload, state: S) => any) => store.subscribe(handler)\r\n}\r\n\r\nexport {\r\n  MockStorage, AsyncStorage, PersistOptions\r\n}\r\n\r\nexport default VuexPersistence\r\n"],"names":[],"mappings":"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"}